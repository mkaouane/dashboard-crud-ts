{"version":3,"sources":["App.tsx","ProductService.js","reportWebVitals.ts","index.tsx"],"names":["App","emptyProduct","id","name","image","description","category","price","quantity","rating","inventoryStatus","useState","products","setProducts","productDialog","setProductDialog","deleteProductDialog","setDeleteProductDialog","deleteProductsDialog","setDeleteProductsDialog","product","setProduct","selectedProducts","setSelectedProducts","submitted","setSubmitted","globalFilter","setGlobalFilter","toast","useRef","dt","useEffect","fetch","then","res","json","d","data","hideDialog","hideDeleteProductDialog","hideDeleteProductsDialog","findIndexById","index","i","length","createId","chars","charAt","Math","floor","random","onCategoryChange","e","_product","value","header","className","type","onInput","currentTarget","placeholder","icon","onClick","tooltip","tooltipOptions","position","disabled","current","exportCSV","selectionOnly","productDialogFooter","Fragment","label","trim","_products","show","severity","summary","detail","life","push","deleteProductDialogFooter","filter","val","deleteProductsDialogFooter","includes","ref","selection","onSelectionChange","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","responsiveLayout","selectionMode","headerStyle","width","exportable","field","sortable","style","minWidth","body","rowData","src","alt","undefined","toLocaleString","currency","readOnly","cancel","toLowerCase","editProduct","confirmDeleteProduct","visible","breakpoints","modal","footer","onHide","htmlFor","onChange","target","onNameChange","required","autoFocus","classNames","onDescriptionChange","cols","inputId","checked","onValueChange","onPriceChange","mode","locale","onQuantityChange","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.737990bf.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, ChangeEvent, FormEvent } from 'react';\r\nimport { classNames } from 'primereact/utils';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { getProducts } from './ProductService';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { Rating } from 'primereact/rating';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { RadioButton, RadioButtonChangeParams } from 'primereact/radiobutton';\r\nimport { InputNumber, InputNumberChangeParams } from 'primereact/inputnumber';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\n\r\ninterface Product {\r\n    id?: string;\r\n    name?: string;\r\n    image?: string;\r\n    description?: string;\r\n    category?: string;\r\n    price?: number;\r\n    quantity?: number;\r\n    rating?: number;\r\n    inventoryStatus?: string;\r\n}\r\n\r\nfunction App() {\r\n    let emptyProduct: Product = {\r\n        id: '',\r\n        name: '',\r\n        image: '',\r\n        description: '',\r\n        category: '',\r\n        price: 0,\r\n        quantity: 0,\r\n        rating: 0,\r\n        inventoryStatus: 'INSTOCK'\r\n    };\r\n\r\n    const [products, setProducts] = useState<Product[]>([]);\r\n    const [productDialog, setProductDialog] = useState(false);\r\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\r\n    const [deleteProductsDialog, setDeleteProductsDialog] = useState(false);\r\n    const [product, setProduct] = useState<Product>(emptyProduct);\r\n    const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [globalFilter, setGlobalFilter] = useState<string>();\r\n    const toast = useRef<Toast>(null);\r\n    const dt = useRef<DataTable>(null);\r\n\r\n    useEffect(() => {\r\n        getProducts().then(data => setProducts(data));\r\n    }, []);\r\n\r\n    const formatCurrency = (value: number) => {\r\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n    }\r\n\r\n    const openNew = () => {\r\n        setProduct(emptyProduct);\r\n        setSubmitted(false);\r\n        setProductDialog(true);\r\n    }\r\n\r\n    const hideDialog = () => {\r\n        setSubmitted(false);\r\n        setProductDialog(false);\r\n    }\r\n\r\n    const hideDeleteProductDialog = () => {\r\n        setDeleteProductDialog(false);\r\n    }\r\n\r\n    const hideDeleteProductsDialog = () => {\r\n        setDeleteProductsDialog(false);\r\n    }\r\n\r\n    const saveProduct = () => {\r\n        setSubmitted(true);\r\n\r\n        if (product.name?.trim()) {\r\n            let _products = [...products];\r\n            let _product = {...product};\r\n            if (product.id) {\r\n                const index = findIndexById(product.id);\r\n\r\n                _products[index] = _product;\r\n                toast.current?.show({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\r\n            }\r\n            else {\r\n                _product.id = createId();\r\n                _product.image = 'product-placeholder.svg';\r\n                _products.push(_product);\r\n                toast.current?.show({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\r\n            }\r\n\r\n            setProducts(_products);\r\n            setProductDialog(false);\r\n            setProduct(emptyProduct);\r\n        }\r\n    }\r\n\r\n    const editProduct = (product: Product) => {\r\n        setProduct({...product});\r\n        setProductDialog(true);\r\n    }\r\n\r\n    const confirmDeleteProduct = (product: Product) => {\r\n        setProduct(product);\r\n        setDeleteProductDialog(true);\r\n    }\r\n\r\n    const deleteProduct = () => {\r\n        let _products = products.filter(val => val.id !== product.id);\r\n        setProducts(_products);\r\n        setDeleteProductDialog(false);\r\n        setProduct(emptyProduct);\r\n        toast.current?.show({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\r\n    }\r\n\r\n    const findIndexById = (id: string) => {\r\n        let index = -1;\r\n        for (let i = 0; i < products.length; i++) {\r\n            if (products[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    const createId = () => {\r\n        let id = '';\r\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n\r\n    const exportCSV = () => {\r\n        dt.current?.exportCSV({selectionOnly:false});\r\n    }\r\n\r\n    const confirmDeleteSelected = () => {\r\n        setDeleteProductsDialog(true);\r\n    }\r\n\r\n    const deleteSelectedProducts = () => {\r\n        let _products = products.filter(val => !selectedProducts.includes(val));\r\n        setProducts(_products);\r\n        setDeleteProductsDialog(false);\r\n        setSelectedProducts([]);\r\n        toast.current?.show({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\r\n    }\r\n\r\n    const onCategoryChange = (e: RadioButtonChangeParams) => {\r\n        let _product = {...product};\r\n        _product['category'] = e.value;\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const val = (e.target && e.target.value) || '';\r\n        let _product: Product = {...product};\r\n        _product.name = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onDescriptionChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const val = (e.target && e.target.value) || '';\r\n        let _product: Product = {...product};\r\n        _product.description = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onPriceChange = (e: InputNumberChangeParams) => {\r\n        const val = e.value || 0;\r\n        let _product = {...product};\r\n        _product.price = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const onQuantityChange = (e: InputNumberChangeParams) => {\r\n        const val = e.value || 0;\r\n        let _product = {...product};\r\n        _product.quantity = val;\r\n\r\n        setProduct(_product);\r\n    }\r\n\r\n    const imageBodyTemplate = (rowData: Product) => {\r\n        return <img src={`demo/images/product/${rowData.image}`} alt={rowData.image} className=\"w-7rem shadow-2\" />\r\n    }\r\n\r\n    const priceBodyTemplate = (rowData: Product) => {\r\n        return (rowData.price !== undefined) ? formatCurrency(rowData.price): '';\r\n    }\r\n\r\n    const ratingBodyTemplate = (rowData: Product) => {\r\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\r\n    }\r\n\r\n    const statusBodyTemplate = (rowData: Product) => {\r\n        return <span className={`product-badge status-${rowData.inventoryStatus?.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData: Product) => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => editProduct(rowData)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger\" onClick={() => confirmDeleteProduct(rowData)} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"flex flex-column md:flex-row md:align-items-center justify-content-between\">\r\n            <span className=\"p-input-icon-left w-full md:w-auto\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e: FormEvent<HTMLInputElement>) => setGlobalFilter(e.currentTarget.value)} placeholder=\"Search...\" className=\"w-full lg:w-auto\" />\r\n            </span>\r\n            <div className=\"mt-3 md:mt-0 flex justify-content-end\">\r\n                <Button icon=\"pi pi-plus\" className=\"mr-2 p-button-rounded\" onClick={openNew} tooltip=\"New\" tooltipOptions={{position: 'bottom'}} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-danger mr-2 p-button-rounded\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !selectedProducts.length} tooltip=\"Delete\" tooltipOptions={{position: 'bottom'}} />\r\n                <Button icon=\"pi pi-upload\" className=\"p-button-help p-button-rounded\" onClick={exportCSV} tooltip=\"Export\" tooltipOptions={{position: 'bottom'}} />\r\n            </div>\r\n        </div>\r\n    );\r\n    const productDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDialog} />\r\n            <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveProduct} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    const deleteProductDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteProduct} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    const deleteProductsDialogFooter = (\r\n        <React.Fragment>\r\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductsDialog} />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteSelectedProducts} />\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"datatable-crud-demo surface-card p-4 border-round shadow-2\">\r\n            <Toast ref={toast} />\r\n\r\n            <div className=\"text-3xl text-800 font-bold mb-4\">PrimeReact CRUD</div>\r\n\r\n            <DataTable ref={dt} value={products} selection={selectedProducts} onSelectionChange={(e) => setSelectedProducts(e.value)}\r\n                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]}\r\n                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\r\n                globalFilter={globalFilter} header={header} responsiveLayout=\"scroll\">\r\n                <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }} exportable={false}></Column>\r\n                <Column field=\"code\" header=\"Code\" sortable style={{ minWidth: '12rem' }}></Column>\r\n                <Column field=\"name\" header=\"Name\" sortable style={{ minWidth: '16rem' }}></Column>\r\n                <Column field=\"image\" header=\"Image\" body={imageBodyTemplate}></Column>\r\n                <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable style={{ minWidth: '8rem' }}></Column>\r\n                <Column field=\"category\" header=\"Category\" sortable style={{ minWidth: '10rem' }}></Column>\r\n                <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable style={{ minWidth: '12rem' }}></Column>\r\n                <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable style={{ minWidth: '12rem' }}></Column>\r\n                <Column body={actionBodyTemplate} exportable={false} style={{ minWidth: '8rem' }}></Column>\r\n            </DataTable>\r\n\r\n            <Dialog visible={productDialog} breakpoints={{'960px': '75vw', '640px': '100vw'}} style={{width: '40vw'}} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\r\n                {product.image && <img src={`demo/images/product/${product.image}`} alt={product.image} className=\"block mt-0 mx-auto mb-5 w-20rem shadow-2\" />}\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <InputText id=\"name\" value={product.name} onChange={(e) => onNameChange(e)} required autoFocus className={classNames({ 'p-invalid': submitted && !product.name })} />\r\n                    {submitted && !product.name && <small className=\"p-error\">Name is required.</small>}\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <InputTextarea id=\"description\" value={product.description} onChange={(e) => onDescriptionChange(e)} required rows={3} cols={20} />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label className=\"mb-3\">Category</label>\r\n                    <div className=\"formgrid grid\">\r\n                        <div className=\"field-radiobutton col-6\">\r\n                            <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\r\n                            <label htmlFor=\"category1\">Accessories</label>\r\n                        </div>\r\n                        <div className=\"field-radiobutton col-6\">\r\n                            <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\r\n                            <label htmlFor=\"category2\">Clothing</label>\r\n                        </div>\r\n                        <div className=\"field-radiobutton col-6\">\r\n                            <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\r\n                            <label htmlFor=\"category3\">Electronics</label>\r\n                        </div>\r\n                        <div className=\"field-radiobutton col-6\">\r\n                            <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\r\n                            <label htmlFor=\"category4\">Fitness</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"formgrid grid\">\r\n                    <div className=\"field col\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onPriceChange(e)} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\r\n                    </div>\r\n                    <div className=\"field col\">\r\n                        <label htmlFor=\"quantity\">Quantity</label>\r\n                        <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onQuantityChange(e)} />\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={hideDeleteProductDialog}>\r\n                <div className=\"flex align-items-center justify-content-center\">\r\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {product && <span>Are you sure you want to delete <b>{product.name}</b>?</span>}\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\r\n                <div className=\"flex align-items-center justify-content-center\">\r\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem'}} />\r\n                    {product && <span>Are you sure you want to delete the selected products?</span>}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","function getProducts() {\r\n    return fetch('demo/data/products.json').then(res => res.json()).then(d => d.data);\r\n}\r\n\r\nexport {getProducts};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}